generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                  String      @id @default(uuid())
  email               String      @unique @db.Char(225)
  name                String      @db.Char(15)
  image               String      @db.LongText
  posts               Blog[]
  comments            Comment[]
  followers_following Followers[]

  likes Like[]
}

model Blog {
  id         String     @id @default(uuid())
  createdAt  DateTime   @default(now())
  title      String     @db.VarChar(30)
  slides     Json       @db.Json
  languages  Language[]
  published  Boolean    @default(false)
  likes      Like[]
  comments   Comment[]
  coverImage String     @default("")
  views      Int        @default(0) @db.Int

  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  authorId String
}

model Language {
  name  String @id @unique @db.Char(15)
  posts Blog[]
}

model Comment {
  id       String @unique @default(uuid())
  comment  String @db.LongText
  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  Blog     Blog   @relation(fields: [blogId], references: [id], onDelete: Cascade)
  blogId   String
  authorId String @db.Char(255)
}

model Like {
  blog   Blog   @relation(fields: [blogId], references: [id], onDelete: Cascade)
  blogId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  @@id([userId, blogId])
}

model Followers {
  followingId String
  followerId  String
  follower    User   @relation(fields: [followerId], references: [id], onDelete: Cascade)

  @@id([followerId, followingId])
}
